* Now
- [X] add BE chat mutation (create/publish a message)
- [X] add FE chat mutation (create/publish a message)
- [ ] display correct 'last activity'
  - [ ] use room's updated_at in frontend
    - [ ] switch to custom codecs first
    - [ ] include in flags
    - [ ] include in gql query
  - [ ] format updated_at nicely
    - [ ] need a library? rtfeldman 8601?
  - [ ] update the room's updated_at when adding a message
- [ ] fix scroll in right message section

* Next
- [ ] tests for lobby subscription
  this will need multiple test gql clients
- [ ] use a pending state for messages initally loading

* Soon
- [ ] test lobby flag with actual rooms present
  just need to create a room in the test
- [ ] display nicer date/time for last activity
  need richard's iso 8601 package that asks itself not to be used
- [ ] unsubscribe from lobby on leaving lobby?
  this would require a special link handler in Main.elm
  need an 'unsubscribe from all' toJs port msg?
  - could just call that on all page transitions (before Page.init)
- [ ] remove expect calls from pubsub?
  panicing might be right, but the joinhandle result has to be handled
  a decode error in a message that the server sent to itself is a programmer error,
  not a user error
- [ ] pending state when adding a room - can't be optimistic b/c generated name
- [ ] make the random room name dictionary larger
- [ ] customize custom scalars
  more custom id types (vs broad Uuid)
  add helper methods to those modules
  avoid duplicating Emoji type

* Someday
- [ ] make the axum fallback route in local dev point back to vite server
- [ ] use elm-ts-interop for ports
  - [ ] convert js files to ts
- [ ] see if it's possible to switch from urql to urql-core
- [ ] disconnect/reconnect handling for subscriptions
  - mimic phoenix channels - exponential backoff
- [ ] tracing with honeycomb
- [ ] NotFound page
- [ ] is the elm build not caching deps correctly?
  scripts include calls to 'npm ci'
- [ ] use a more structured build config like:
  https://github.com/MattCheely/elm-build-config
- [ ] consider using flume instead of tokio broadcast
- [ ] run ci elm build against both prod gql schema and branch/local gql schema
- [ ] make one command for switching between local api and prod api
  do all of: change config, regnerate schema file, and regenerate elm modules
- [ ] figure out if replicated redis on fly is viable for something like this

* Other
- [-] catch up reading z2p
  idempotency is the only one left
- [ ] elm-review editor setup
  - [ ] disable elm analyze emacs setup - this is in lsp?
  - [ ] add elm review emacs setup (or switch to intellij?)
- [ ] use ints for times in json instead of DateTime?
- [ ] make a 'banned identifier names' elm review rule (eg 'todo', 'replaceme')

* Next Time
- don't use elm-tailwind-modules, it probably can't support TW 3.0
- use a configured default app database in prod instead of 'postgres'
- use different types for redis serialization and graphql
- always send result types in a subscription stream
  and always use boxed streams instead of plain generics
- use customized scalar codecs from the beginning, if using graphql
- consider openapi & axum typed websocket instead of graphql
